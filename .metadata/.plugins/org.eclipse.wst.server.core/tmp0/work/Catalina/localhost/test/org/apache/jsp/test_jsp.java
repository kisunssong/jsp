/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.59
 * Generated at: 2020-10-28 12:45:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class test_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("<HEAD><TITLE>Hello Jsp</TITLE></HEAD>\r\n");
      out.write("<BODY>\r\n");
      out.write("줄개행 연습<BR>\r\n");
      out.write("줄개행 연습<BR><BR>\r\n");
      out.write("줄개행 연습<BR><BR><BR>\r\n");
      out.write("단락 연습<P>\r\n");
      out.write("단락 연습<P>\r\n");
      out.write("단락 연습<P>\r\n");
      out.write("<UL TYPE=\"CIRCLE\"><!-- 번호 없는 목록 작성 *사과 *바나나 이렇게 앞에 쩜이찍힘-->\r\n");
      out.write("<LI>사과\r\n");
      out.write("<LI>바나나\r\n");
      out.write("<LI>복숭아\r\n");
      out.write("</UL>\r\n");
      out.write("<OL><!-- 특정한 문자로 번호를 먹여서 나열 -->\r\n");
      out.write("<LI>사과</LI> <!-- <LI></LI>하면 앞에 숫자로 표현됨 1.사과 2.바나나 3.복숭아 -->\r\n");
      out.write("<LI>바나나</LI>\r\n");
      out.write("<LI>복숭아</LI>\r\n");
      out.write("\t<OL TYPE=\"A\"> <!-- A.사과 B.바나나 C.복숭아  -->\r\n");
      out.write("\t<LI>사과</LI>\r\n");
      out.write("\t<LI>바나나</LI>\r\n");
      out.write("\t<LI>복숭아</LI>\r\n");
      out.write("\t</OL>\r\n");
      out.write("</OL>\r\n");
      out.write("<DL>DL기능은 뭐야?\r\n");
      out.write("<DT>DT첫번째 <!-- 스타일 시트 -->\r\n");
      out.write("\t<DD>DD기능은 뭔데 <!-- 스타일 시트란 문서가 스크린, 프린터, 또는 기타 출력기로 표현되어 질때 문서 표현 정의 -->\r\n");
      out.write("<DT>CSS\r\n");
      out.write("\t<DD>DT2번째<!-- CSS는 웹 문서에 스타일을 추가할 수 있는 간단한 메커니즘 -->\r\n");
      out.write("</DL>\r\n");
      out.write("<IMG SRC=\"E:\\javajsp\\test\\src\\bon2.jpg\" ALT=\"봉댕\" BORDER=\"10\"><P>\r\n");
      out.write("<!-- SRC=경로 ALT=뒤에깔리는글 BORDER=테두리 선 굵기 -->\r\n");
      out.write("<IMG SRC=\"E:\\javajsp\\test\\src\\bon1.jpg\" WIDTH=\"300\" HEIGHT=\"100\"><P>\r\n");
      out.write("<!-- SRC=경로 WIDTH=넓이 HEIGHT=높이 -->\r\n");
      out.write("<IMG SRC=\"E:\\javajsp\\test\\src\\bon1.jpg\" WIDTH=\"30%\" HEIGHT=\"30%\"><P>\r\n");
      out.write("<!-- SRC=경로 WIDTH=전체넓이 % HEIGHT=전체높이 % -->\r\n");
      out.write("<IMG SRC=\"E:\\javajsp\\test\\src\\bon2.jpg\" ALIGN=\"TOP\">이것은 봉댕이<P>\r\n");
      out.write("<!-- ALIGN=위치 TOP 위쪽에 문자입력 -->\r\n");
      out.write("<IMG SRC=\"E:\\javajsp\\test\\src\\bon2.jpg\" ALIGN=\"MIDDLE\">이것은 봉댕이<P>\r\n");
      out.write("<!-- ALIGN=위치 MIDDLE 중앙에 문자입력 -->\r\n");
      out.write("<IMG SRC=\"E:\\javajsp\\test\\src\\bon2.jpg\" ALIGN=\"BOTTOM\">이것은 봉댕이<P>\r\n");
      out.write("<!-- ALIGN=위치 BOTTOM 밑에 문자입력 -->\r\n");
      out.write("<IMG SRC=\"E:\\javajsp\\test\\src\\bon2.jpg\" ALIGN=\"LEFT\">왼쪽에 나타나게<P>\r\n");
      out.write("<HR><BR><!-- <HR>은 기본 선 -->\r\n");
      out.write("<HR SIZE=\"50\"><BR>  <!-- 두께를 조정 -->\r\n");
      out.write("<HR WIDTH=\"80\"><BR> <!-- 넓이를 조정  -->\r\n");
      out.write("<HR ALIGN=\"LEFT\" WIDTH=\"300\"><BR> <!-- ALIGN(위치)=LEFT(좌측), 넓이=300 조정-->\r\n");
      out.write("<HR ALIGN=\"CENTER\" WIDTH=\"300\"><BR> <!-- ALIGN(위치)=CENTER(중앙), 넓이=300 조정-->\r\n");
      out.write("<HR ALIGN=\"RIGHT\" WIDTH=\"300\"><BR> <!-- ALIGN(위치)=RIGHT(우측), 넓이=300 조정-->\r\n");
      out.write("<HR NOSHADE><BR><!-- 그림자 선-->\r\n");
      out.write("<CENTER>문단을 가운데로 정렬</CENTER> \r\n");
      out.write("<DIV ALIGN=\"RIGHT\"><!-- <DIV>(문단구역을정해서정리)</DIV> ALIGN(위치)와 함께 -->\r\n");
      out.write("<FONT SIZE=\"7\">FONT탭 사이즈\"7\"</FONT><!-- 문자 SIZE=\"1\">..>\"7\"까지있음 -->\r\n");
      out.write("</DIV>\r\n");
      out.write("<FONT SIZE=\"5\" FACE=\"굴림\" COLOR=\"RED\">FONT탭 사이즈\"5\" FACE\"굴림\" COLOR\"RED\"</FONT><BR>\r\n");
      out.write("<FONT SIZE=\"3\" FACE=\"궁서\" COLOR=\"BLUE\">FONT탭 사이즈\"5\" FACE\"굴림\" COLOR\"RED\"</FONT><BR>\r\n");
      out.write("<H2>안녕 JSP 내가 왔어~ 봉댕 안녕~</H2> <!-- <H1>글꼴의 크기 <H6까지만있음> -->\r\n");
      out.write("&quot;<BR><!-- 특수문자 기호: \" -->\r\n");
      out.write("&amp;<BR> <!-- 특수문자 기호: & -->\r\n");
      out.write("&lt;<BR> <!--  특수문자 기호: < -->\r\n");
      out.write("&gt;<BR><!--  특수문자 기호: > -->\r\n");
      out.write("<PRE><!-- 문자를 입력한 그대로 출력 (공백 포함해서) -->\r\n");
      out.write("\t안\t녕~~ 나는 HTML\r\n");
      out.write("웅웅\r\n");
      out.write("</PRE>\r\n");
      out.write("<B>볼드체가 어떻게 생긴거지 ㅋㅋ</B><BR> <!-- 문자가 굵어짐 -->\r\n");
      out.write("<BIG>한단계만 큰문자인가</BIG><BR> <!-- 한단계 큰문자 -->\r\n");
      out.write("<SMALL>한단계 작은문자인가</SMALL><BR> <!-- 한단계 작은문자 -->\r\n");
      out.write("<I>이탤릭체 라고 한다 ㅋㅋ</I><BR><!-- 문자가 기울어짐 -->\r\n");
      out.write("<STRIKE>강조강조</STRIKE><BR><!-- 문자중앙에 글이 그어짐 (삭제표시) -->\r\n");
      out.write("<SUB>아래 첨자라고 하는데</SUB><BR><!-- 원 글에 위에 써짐 -->\r\n");
      out.write("<SUP>윗 첨자 라고하네</SUP><BR><!-- 원 글에 아래에 써짐 -->\r\n");
      out.write("<U>밑줄이 쳐진 문자</U><BR><!-- 글자에 밑줄이 그어짐 -->\r\n");
      out.write("\r\n");
      out.write("</BODY>\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.59
 * Generated at: 2020-10-28 14:16:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class table_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("<HEAD><TITLE>표만들기 시작~</TITLE></HEAD>\r\n");
      out.write("<H2>표만들기</H2>\r\n");
      out.write("<TABLE>\r\n");
      out.write("<TR><TH>국어<TH>영어<TH>수학</TR>\r\n");
      out.write("<!-- TR은 ROW 하나의 행을 구분 을 지정) -->\r\n");
      out.write("<!-- TH은 COLUMN 윗줄에 제목 지정 -->\r\n");
      out.write("<TR><TD>100<TD>90<TD>80</TR>\r\n");
      out.write("<!-- TD은 COLUMN에 밑에 데이터를 지정 -->\r\n");
      out.write("</TABLE>\r\n");
      out.write("\r\n");
      out.write("<TABLE BORDER=\"1\">\r\n");
      out.write("<!-- 테이블의 BORDER=테두리두께 -->\r\n");
      out.write("<TR><TD>표의 테두리 두께 1</TR>\r\n");
      out.write("<TABLE BORDER=\"10\">\r\n");
      out.write("<TR><TD>표의 테두리 두께 10</TR>\r\n");
      out.write("</TABLE><P>\r\n");
      out.write("\r\n");
      out.write("<TABLE BORDER=\"1\">\r\n");
      out.write("<CAPTION ALIGN=\"TOP\">제목지정</CAPTION>\r\n");
      out.write("<!-- CAPTION 표의제목 , ALIGN 위치 TOP 위에 제목지정 -->\r\n");
      out.write("<TR><TD>이름<TD>주소</TR>\r\n");
      out.write("<!-- 표에 한칸 한칸 들어간다 -->\r\n");
      out.write("<TR><TD>봉댕<TD>경기도 화성시 병점</TR>\r\n");
      out.write("</TABLE><P>\r\n");
      out.write("\r\n");
      out.write("<TABLE BORDER=\"1\" WIDTH=\"200\">\r\n");
      out.write("<!-- WIDTH 전체 넓이 200픽셀 -->\r\n");
      out.write("<TR><TD>봉댕1<TD>봉댕2</TR>\r\n");
      out.write("<TR><TD>봉댕3<TD>봉댕4</TR>\r\n");
      out.write("</TABLE><P>\r\n");
      out.write("\r\n");
      out.write("<TABLE BORDER=\"1\" WIDTH=\"50%\">\r\n");
      out.write("<!-- WIDTH 전체 넓이 50%차지 -->\r\n");
      out.write("<TR><TD>봉댕1<TD>봉댕2</TR>\r\n");
      out.write("<TR><TD>봉댕3<TD>봉댕4</TR>\r\n");
      out.write("</TABLE><P>\r\n");
      out.write("\r\n");
      out.write("<TABLE BORDER=\"1\" HEIGHT=\"100\">\r\n");
      out.write("<!-- HEIGHT 전체 높이 100픽셀 (전체크기 % 지정가능)-->\r\n");
      out.write("<TR><TD>봉댕1<TD>봉댕2</TR>\r\n");
      out.write("<TR><TD>봉댕3<TD>봉댕4</TR>\r\n");
      out.write("</TABLE><BR>\r\n");
      out.write("\r\n");
      out.write("<TABLE BORDER=\"1\" WIDTH=\"300\" ALIGN=\"CENTER\">\r\n");
      out.write("<!-- WIDTH 전체높이 300픽셀에 ALIGN 중앙에 표위치지정(LEFT,CENTER,RIGHT) -->\r\n");
      out.write("<TR><TD>봉댕1<TD>봉댕2</TR>\r\n");
      out.write("<TR><TD>봉댕3<TD>봉댕4</TR>\r\n");
      out.write("</TABLE><P>\r\n");
      out.write("\r\n");
      out.write("<TABEL BORDER=\"1\" ALIGN=\"LEFT\" CELLSPACING=\"10\">\r\n");
      out.write("<TR><TD>봉댕1<TD>봉댕2</TR>\r\n");
      out.write("<TR><TD>봉댕3<TD>봉댕4</TR>\r\n");
      out.write("</TABEL>\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
